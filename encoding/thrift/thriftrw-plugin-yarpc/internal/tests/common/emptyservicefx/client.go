// Code generated by thriftrw-plugin-yarpc
// @generated

package emptyservicefx

import (
	fx "go.uber.org/fx"
	yarpc "go.uber.org/yarpc"
	encoding "go.uber.org/yarpc/api/encoding"
	thrift "go.uber.org/yarpc/encoding/thrift"
	emptyserviceclient "go.uber.org/yarpc/encoding/thrift/thriftrw-plugin-yarpc/internal/tests/common/emptyserviceclient"
)

// Params defines the dependencies for the EmptyService client.
type Params struct {
	fx.In

	Provider        yarpc.ClientConfig
	AdapterProvider encoding.AdapterProvider `optional:"true"`
}

// Result defines the output of the EmptyService client module. It provides a
// EmptyService client to an Fx application.
type Result struct {
	fx.Out

	Client emptyserviceclient.Interface

	// We are using an fx.Out struct here instead of just returning a client
	// so that we can add more values or add named versions of the client in
	// the future without breaking any existing code.
}

// Client provides a EmptyService client to an Fx application using the given name
// for routing.
//
// 	fx.Provide(
// 		emptyservicefx.Client("..."),
// 		newHandler,
// 	)
func Client(name string, opts ...thrift.ClientOption) interface{} {
	return func(p Params) (Result, error) {
		client, err := emptyserviceclient.NewFromConfig(
			p.Provider.ClientConfig(name),
			emptyserviceclient.Config{
				AdapterProvider: p.AdapterProvider,
			},
			opts...)
		if err != nil {
			return Result{}, err
		}
		return Result{Client: client}, nil
	}
}
